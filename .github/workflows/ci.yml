name: CI
on:
  push:
  pull_request:
    branches:
      - main
      - master
permissions: read-all
jobs:
  MegaLinter:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      # For GitHub Comment Reporter
      # https://megalinter.io/latest/reporters/GitHubCommentReporter/
    steps:
      - uses: actions/checkout@v4

      # MegaLinter
      - name: MegaLinter
        id: ml
        # You can override MegaLinter flavor used to have faster performances
        # More info at https://megalinter.io/flavors/
        uses: oxsecurity/megalinter@v8
        env:
          # All available variables are described in documentation
          # https://megalinter.io/config-file/
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASH_SHELLCHECK_ARGUMENTS: "--source-path=/github/workspace"
          # See `.mega-linter.yml`.
          # https://megalinter.io/latest/reporters/ApiReporter/
          API_REPORTER: true
          API_REPORTER_URL: ${{ secrets.API_REPORTER_URL }}
          API_REPORTER_BASIC_AUTH_USERNAME: ${{ secrets.API_REPORTER_BASIC_AUTH_USERNAME }}
          API_REPORTER_BASIC_AUTH_PASSWORD: ${{ secrets.API_REPORTER_BASIC_AUTH_PASSWORD }}
          API_REPORTER_METRICS_URL: ${{ secrets.API_REPORTER_METRICS_URL }}
          API_REPORTER_METRICS_BASIC_AUTH_USERNAME: ${{ secrets.API_REPORTER_METRICS_BASIC_AUTH_USERNAME }}
          API_REPORTER_METRICS_BASIC_AUTH_PASSWORD: ${{ secrets.API_REPORTER_METRICS_BASIC_AUTH_PASSWORD }}
          API_REPORTER_DEBUG: false

      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Guix cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/guix
          # use a key that (almost) never matches
          key: guix-cache-${{ github.sha }}
          restore-keys: |
            guix-cache-

      - name: Install Guix
        uses: PromyLOPh/guix-install-action@v1

      - name: Lint
        run: make lint
        env:
          TMPDIR: "${{ runner.temp }}"

      - name: Build
        run: make build
        env:
          TMPDIR: "${{ runner.temp }}"

      - name: Test
        run: make test
        env:
          TMPDIR: "${{ runner.temp }}"
